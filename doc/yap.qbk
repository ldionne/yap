[/
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[library Boost.YAP (Proposed)
    [quickbook 1.3]
    [authors [Laine, Zach]]
    [copyright 2016 T. Zachary Laine]
    [category template]
    [id yap]
    [dirname yap]
    [purpose
        An expression template library for newer standards of C++.
    ]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ QuickBook Document version 1.3 ]

[/ Images ]

[def __note__              [$images/note.png]]
[def __tip__               [$images/tip.png]]
[def __important__         [$images/important.png]]
[def __caution__           [$images/caution.png]]
[def __warning__           [$images/warning.png]]

[/ Links ]

[def _yap_                 Boost.YAP]

[def _Expr_                [link boost_yap__proposed_.concepts.expression Expression]]
[def _Exprs_               [link boost_yap__proposed_.concepts.expression Expressions]]
[def _ExprTmpl_            [link boost_yap__proposed_.concepts.expressiontemplate ExpressionTemplate]]
[def _ExprTmpls_           [link boost_yap__proposed_.concepts.expressiontemplate ExpressionTemplates]]
[def _XForm_               [link boost_yap__proposed_.concepts.transform Transform]]
[def _ExprXForm_           [link boost_yap__proposed_.concepts.expressiontransform ExpressionTransform]]
[def _TagXForm_            [link boost_yap__proposed_.concepts.tagtransform TagTransform]]

[def _expr_                [classref boost::yap::expression `expression<>`]]
[def _kind_                [enumref boost::yap::expr_kind `expr_kind`]]
[def _terminal_            [link boost.yap.expr_kind.terminal `boost::yap::expr_kind::terminal`]]
[def _placeholder_         [link boost.yap.expr_kind.placeholder `boost::yap::expr_kind::placeholder`]]
[def _if_else_             [link boost.yap.expr_kind.if_else `boost::yap::expr_kind::if_else`]]
[def _expr_ref_            [link boost.yap.expr_kind.expr_ref `boost::yap::expr_kind::expr_ref`]]
[def _xform_               [funcref boost::yap::transform `transform()`]]
[def _eval_                [funcref boost::yap::transform `evaluate()`]]
[def _eval_as_             [funcref boost::yap::transform `evaluate_as()`]]
[def _tuple_               `boost::hana::tuple<>`]

[def _unary_member_m_      [macroref BOOST_YAP_USER_UNARY_OPERATOR_MEMBER]]
[def _binary_member_m_     [macroref BOOST_YAP_USER_BINARY_OPERATOR_MEMBER]]
[def _member_call_m_       [macroref BOOST_YAP_USER_MEMBER_CALL_OPERATOR]]
[def _binary_free_m_       [macroref BOOST_YAP_USER_FREE_BINARY_OPERATOR]]
[def _expr_if_else_m_      [macroref BOOST_YAP_USER_EXPR_IF_ELSE]]
[def _udt_any_if_else_m_   [macroref BOOST_YAP_USER_UDT_ANY_IF_ELSE]]
[def _udt_unary_m_         [macroref BOOST_YAP_USER_UDT_UNARY_OPERATOR]]
[def _udt_udt_unary_m_     [macroref BOOST_YAP_USER_UDT_UDT_BINARY_OPERATOR]]
[def _udt_any_unary_m_     [macroref BOOST_YAP_USER_UDT_ANY_BINARY_OPERATOR]]
[def _conv_op_m_           [macroref BOOST_YAP_CONVERSION_OPERATOR_TEMPLATE]]

[def _spirit_              [@http://boost-spirit.com Boost.Spirit]]
[def _eigen_               [@http://eigen.tuxfamily.org Eigen]]
[def _nt2_                 [@https://www.lri.fr/~falcou/nt2 NT2]]

[def _Ets_                 Expression templates]
[def _et_                  expression template]
[def _ets_                 expression templates]

[include intro.qbk]
[include manual.qbk]
[include concepts.qbk]

[xinclude yap_reference.xml]
